" Make external commands work through a pipe instead of a pseudo-tty
"set noguipty

" You can also specify a different font, overriding the default font
"if has('gui_gtk2')
"  set guifont=Bitstream\ Vera\ Sans\ Mono\ 12
"else
"  set guifont=-misc-fixed-medium-r-normal--14-130-75-75-c-70-iso8859-1
"endif

" If you want to run gvim with a dark background, try using a different
" colorscheme or running 'gvim -reverse'.
" http://www.cs.cmu.edu/~maverick/VimColorSchemeTest/ has examples and
" downloads for the colorschemes on vim.org

" Source a global configuration file if available
if filereadable("/etc/vim/gvimrc.local")
  source /etc/vim/gvimrc.local
endif

" highlighting syntax
syntax on
 
" sets dark color scheme
if has('gui_running')
	" removes off tool and menu bars
	set guioptions -=m
	set guioptions -=T

	" removes scrolls
	set guioptions -=r
	set guioptions -=L

	if has("unix")
		if filereadable(expand("$HOME/vimfiles/colors/thaumaturge.vim"))
			colorscheme thaumaturge
		elseif filereadable(expand("$HOME/vimfiles/colors/vim-material.vim"))
			colorscheme vim-material
		elseif filereadable('$HOME/vimfiles/colors/spring-night.vim')
			colorscheme spring-night
		elseif filereadable('$HOME/vimfiles/colors/monokai-phoenix.vim')
			colorscheme monokai-phoenix
		elseif filereadable('$HOME/vimfiles/colors/monokai.vim')
			colorscheme monokai
		else
			echo "U dont have cool colors ;("
			colorscheme darkblue
		endif
	elseif has('win32') || has('win64')
		if filereadable(expand("$HOME\\vimfiles\\colors\\thaumaturge.vim"))
			colorscheme thaumaturge
		elseif filereadable(expand("$HOME\\vimfiles\\colors\\vim-material.vim"))
			colorscheme vim-material
		elseif filereadable(expand("$HOME\\vimfiles\\colors\\spring-night.vim"))
			colorscheme spring-night
		elseif filereadable(expand("$HOME\\vimfiles\\colors\\monokai-phoenix.vim"))
			colorscheme monokai-phoenix
		elseif filereadable(expand("$HOME\\vimfiles\\colors\\monokai.vim"))
			colorscheme monokai
		else
			echo "U dont have cool colors ;("
			colorscheme darkblue
		endif
	endif
endif

" loads vim confgi that makes ctrl + c ; ctrl + v works
so $VIMRUNTIME/mswin.vim 

" makes the text selection works like in MS WIN
behave mswin

" displaying line numbers
set number

" Binds toggle for relative number to F2 button
map <F2> :set relativenumber!<CR>


" makes the tab to be 2 space equal
set noexpandtab shiftwidth=2 tabstop=2 

" sets initial size of gvim window
set lines=65 columns=140

" sets font size and style
if has('win32')|| has('win64')
	set guifont=Consolas:h8:cEASTEUROPE " Windows
elseif has('unix')
	set guifont=Monospace " Linux
endif

" adds proper encoding for latin chars
set encoding=utf-8

" making vim to autoindenting lines after enter
set autoindent
set cindent

" after openning bracket vim adds closing one and enter between
" if tapped twice only one is opened
inoremap {      {}<Left>
inoremap {{     {

inoremap {<CR>  {<CR>}<Esc>
inoremap {}     {}

" same like the bracket but with pranthesis
inoremap (      ()<left>
inoremap ((     (

" same like above
inoremap [ []<left>
inoremap [[     [

" removes jump over wrapped line
" normal mode
nnoremap <Up> gk
nnoremap <Down> gj

nnoremap k gk
nnoremap j gj

" insert mode
inoremap <C-k> <C-o>gk
inoremap <C-j> <C-o>gj

" cursor moves 10 lines at once when 
" holding ctrl
"* <C-o> is required
inoremap <C-Up> <C-o>10gk
inoremap <C-Down> <C-o>10gj

" Same as above but for normal mode 
nnoremap <C-Up> 10gk
nnoremap <C-Down> 10gj

" ingore case for normal searches
" case sensitive when all uppercase
set ignorecase
set smartcase

set swapfile
if has('win32') || has('win64')
	set dir=%HOMEPATH%\vimtmp
	set belloff=all " dont beep
elseif has('unix')
	set dir=~/vimtmp
endif

filetype plugin on
set omnifunc=syntaxcomplete#Complete

" highlight search terms
set hlsearch

" show search matches as you type
set incsearch

" shows matching parenthesis
set showmatch

" paste mode for vim
set pastetoggle=<F2>

" autoload NERDTree
" I dont actually like this option ;/
" autocmd vimenter * NERDTree

" binding toggle nerdtree to F3 button
nmap <F3> :NERDTreeToggle<CR>
