" Make external commands work through a pipe instead of a pseudo-tty
"set noguipty

" You can also specify a different font, overriding the default font
"if has('gui_gtk2')
"  set guifont=Bitstream\ Vera\ Sans\ Mono\ 12
"else
"  set guifont=-misc-fixed-medium-r-normal--14-130-75-75-c-70-iso8859-1
"endif

" If you want to run gvim with a dark background, try using a different
" colorscheme or running 'gvim -reverse'.
" http://www.cs.cmu.edu/~maverick/VimColorSchemeTest/ has examples and
" downloads for the colorschemes on vim.org

" Source a global configuration file if available
if filereadable("/etc/vim/gvimrc.local")
  source /etc/vim/gvimrc.local
endif

" highlighting syntax
syntax on

colorscheme goodwolf 

if has("unix")
  let vimdir = ".vim"
elseif has('win32') || has('win64')
  let vimdir = "vimfiles"
endif
 
" sets dark color scheme
if has('gui_running')
	" removes off tool and menu bars
	set guioptions -=m
	set guioptions -=T

	" removes scrolls
	set guioptions -=r
	set guioptions -=L

	" sets initial size of gvim window
	set lines=25 columns=95
" Not gui
else 
	set bg=dark
endif " check gui

" loads vim confgi that makes ctrl + c ; ctrl + v works
so $VIMRUNTIME/mswin.vim 

" makes the text selection works like in MS WIN
behave mswin

" displaying line numbers
set number

" Binds toggle for relative number to F2 button
map <F2> :set relativenumber!<CR>

" makes the tab to be 2 space equal
set expandtab shiftwidth=2 softtabstop=2 

" sets font size and style
if has('win32') || has('win64')
	set guifont=IBM_Plex_Mono_Text:h9:cANSI:qDRAFT " Windows
elseif has('unix')
	set guifont=Monospace " Linux
endif

" adds proper encoding for latin chars
set encoding=utf-8

" making vim to autoindenting lines after enter
set autoindent

" removes jump over wrapped line
" normal mode
nnoremap <Up> gk
nnoremap <Down> gj

nnoremap k gk
nnoremap j gj

" insert mode
inoremap <C-k> <C-o>gk
inoremap <C-j> <C-o>gj

" cursor moves 10 lines at once when 
" holding ctrl
"* <C-o> is required
inoremap <C-Up> <C-o>10gk
inoremap <C-Down> <C-o>10gj

" Same as above but for normal mode 
nnoremap <C-Up> 10gk
nnoremap <C-Down> 10gj

nnoremap <C-K> 10gk
nnoremap <C-J> 10gj

" ingore case for normal searches
" case sensitive when all uppercase
set ignorecase
set smartcase

set swapfile
if has('win32') || has('win64')
	set dir=%HOMEPATH%\vimtmp
	set belloff=all " dont beep
elseif has('unix')
	set dir=~/.vimtmp
endif

filetype plugin on
set completeopt=menuone,preview,noselect

" highlight search terms
set hlsearch

" show search matches as you type
set incsearch

" shows matching parenthesis
set showmatch

" paste mode for vim
set pastetoggle=<F2>

set wildmenu

" tab completitions in nice menu
" set wildmenu

" autoload NERDTree
" I dont actually like this option ;/
" autocmd vimenter * NERDTree

" binding toggle nerdtree to F3 button
nmap <F3> :NERDTreeToggle<CR>

autocmd InsertEnter * let save_cwd = getcwd() | set autochdir
autocmd InsertLeave * set noautochdir | execute 'cd' fnameescape(save_cwd)

set laststatus=2
set statusline=%f\ -\ FileType:\ %y

let tags=$HOME . "/" . vimdir . "/" . "tags/tags"
let &tags=expand(tags) " Fix slashes
