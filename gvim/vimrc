set nocompatible
filetype off

if $USER_VIM_ENABLE_PLUGINS == 'Y'
  set rtp+=~/.vim/bundle/Vundle.vim
  call vundle#begin()

  Plugin 'Valloric/YouCompleteMe'

  call vundle#end()
  filetype plugin indent on

  " let Vundle manage Vundle, required
  Plugin 'VundleVim/Vundle.vim'
endif

" highlighting syntax
syntax on

colorscheme goodwolf 

if has("unix")
  let vimdir = ".vim"
elseif has('win32') || has('win64')
  let vimdir = "vimfiles"
endif
 
" sets dark color scheme
if has('gui_running')
	" removes off tool and menu bars
	set guioptions -=m
	set guioptions -=T

	" removes scrolls
	set guioptions -=r
	set guioptions -=L

	" sets initial size of gvim window
	set lines=25 columns=95
" Not gui
else 
	set bg=dark
endif " check gui

" displaying line numbers
set number

" Binds toggle for relative number to F2 button
map <F2> :set relativenumber!<CR>

" sets font size and style
if has('win32') || has('win64')
	set guifont=IBM_Plex_Mono_Text:h9:cANSI:qDRAFT " Windows
elseif has('unix')
	set guifont=Ubuntu\ Mono\ 8 " Linux
endif

" adds proper encoding for latin chars
set encoding=utf-8

" making vim to autoindenting lines after enter
set autoindent

" removes jump over wrapped line
" normal mode
nnoremap <Up> gk
nnoremap <Down> gj

nnoremap k gk
nnoremap j gj

" insert mode
inoremap <C-k> <C-o>gk
inoremap <C-j> <C-o>gj

" cursor moves 10 lines at once when 
" holding ctrl
"* <C-o> is required
inoremap <C-Up> <C-o>10gk
inoremap <C-Down> <C-o>10gj

" Same as above but for normal mode 
nnoremap <C-Up> 10gk
nnoremap <C-Down> 10gj

nnoremap <C-K> 10gk
nnoremap <C-J> 10gj

" Makes cursor to be block in every mode
set guicursor=n-v-c-i:block-Cursor

" Makes cursor dark grey and chars underneath steelblue
highlight Cursor guifg=steelblue guibg=darkgrey
highlight iCursor guifg=steelblue guibg=darkgrey

" ingore case for normal searches
" case sensitive when all uppercase
set ignorecase
set smartcase

set swapfile
if has('win32') || has('win64')
	set dir=%HOMEPATH%\vimtmp
	set belloff=all " dont beep
elseif has('unix')
	set dir=~/.vimtmp
endif

filetype plugin on
set completeopt=menuone,preview,noselect

" highlight search terms
set hlsearch

" show search matches as you type
set incsearch

" shows matching parenthesis
set showmatch

" paste mode for vim
set pastetoggle=<F2>

set wildmenu

" tab completitions in nice menu
" set wildmenu

" autoload NERDTree
" I dont actually like this option ;/
" autocmd vimenter * NERDTree

" binding toggle nerdtree to F3 button
nmap <F3> :NERDTreeToggle<CR>

autocmd InsertEnter * let save_cwd = getcwd() | set autochdir
autocmd InsertLeave * set noautochdir | execute 'cd' fnameescape(save_cwd)

set laststatus=2
set statusline=%f\ -\ FileType:\ %y

set tags=./tags;
set path=.;

function! Gentags()
	!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .
endfunction

set statusline=%<%f%m\ \[%{&ff}:%{&fenc}:%Y]\ %=\ %l\/%L\ :\ %c%V

let g:ycm_use_clangd = 1
let g:ycm_auto_trigger = 1

set list lcs=trail:\Â·,tab:\|\ 

nnoremap ygi :YcmCompleter GoToInclude<CR>
nnoremap ygf :YcmCompleter FixIt<CR>
nnoremap ygd :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap ygt :YcmCompleter GetType<CR>

set secure
set exrc

au BufReadPost *.tex setlocal spell spelllang=pl
